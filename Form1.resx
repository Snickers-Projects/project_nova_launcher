<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="textBoxProfileDetails.Text" xml:space="preserve">
    <value>You can copy the selected Ayria profile to your X Labs client or vice versa, this only works if your Profile ID is a valid 8 character hex number (Any combination of numbers and letters between 0-9 and A-F), and that you've actually started the game in Ayria at least once with that profile</value>
  </data>
  <data name="textBoxNoPlaylist.Text" xml:space="preserve">
    <value>No extra playlists detected.

Here you can select custom playlists if you have any.
You need to create a "Playlists" folder and drop any custom playlists you have into it.

You can name them whatever you like as long as they end in either .aggr, .info or .wad depending on the game.</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAACQAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAUTMiA89zI8ZPcKPGTfIkg4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//wAB7chJDvLMQBTqv0AMAAAAAAAA
        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
        /ZgA7//QAO/+6gDv/u4A7/7pAO/+ygDt/Y8A7f86AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVY7/CUqG+CZIhPc8SoX0MEuH
        /xEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAA//8BAO//EADz/xYA7f8OAP//AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////8AAP///////wAA////////
        AAD///////8AAP///////wAA////////AAD///////8AAP///////wAA////////AAD///////8AAP//
        /////wAA////////AAD/wf//h/8AAP8AP/wA/wAA/AAP+AA/AAD4AAfgAB8AAPAAB+CCDwAA4AAP8AAH
        AADAAD/8AAMAAMAAP/wAAwAAhCFAAAQhAACAYEAABgEAAIBgQAAHAQAAgOAAAAcRAACA4BAHjxEAAIB/
        wAH/AQAAgH8AAP4BAADAPgPAfAEAAMAIAAAAAwAAwAAAAAADAADgAAAAAAcAAPAAA8CCDwAA+AAH4AAP
        AAD8AA/4AD8AAP4AP/wA/wAA/8H//4P/AAD///////8AAP///////wAA////////AAD///////8AAP//
        /////wAA////////AAD///////8AAP///////wAA////////AAD///////8AAP///////wAA////////
        AAA=
</value>
  </data>
</root>